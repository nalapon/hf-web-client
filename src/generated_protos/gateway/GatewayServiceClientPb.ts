/**
 * @fileoverview gRPC-Web generated client stub for gateway
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: gateway/gateway.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as gateway_gateway_pb from '../gateway/gateway_pb'; // proto import: "gateway/gateway.proto"


export class GatewayClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorEndorse = new grpcWeb.MethodDescriptor(
    '/gateway.Gateway/Endorse',
    grpcWeb.MethodType.UNARY,
    gateway_gateway_pb.EndorseRequest,
    gateway_gateway_pb.EndorseResponse,
    (request: gateway_gateway_pb.EndorseRequest) => {
      return request.serializeBinary();
    },
    gateway_gateway_pb.EndorseResponse.deserializeBinary
  );

  endorse(
    request: gateway_gateway_pb.EndorseRequest,
    metadata?: grpcWeb.Metadata | null): Promise<gateway_gateway_pb.EndorseResponse>;

  endorse(
    request: gateway_gateway_pb.EndorseRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: gateway_gateway_pb.EndorseResponse) => void): grpcWeb.ClientReadableStream<gateway_gateway_pb.EndorseResponse>;

  endorse(
    request: gateway_gateway_pb.EndorseRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: gateway_gateway_pb.EndorseResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/gateway.Gateway/Endorse',
        request,
        metadata || {},
        this.methodDescriptorEndorse,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/gateway.Gateway/Endorse',
    request,
    metadata || {},
    this.methodDescriptorEndorse);
  }

  methodDescriptorSubmit = new grpcWeb.MethodDescriptor(
    '/gateway.Gateway/Submit',
    grpcWeb.MethodType.UNARY,
    gateway_gateway_pb.SubmitRequest,
    gateway_gateway_pb.SubmitResponse,
    (request: gateway_gateway_pb.SubmitRequest) => {
      return request.serializeBinary();
    },
    gateway_gateway_pb.SubmitResponse.deserializeBinary
  );

  submit(
    request: gateway_gateway_pb.SubmitRequest,
    metadata?: grpcWeb.Metadata | null): Promise<gateway_gateway_pb.SubmitResponse>;

  submit(
    request: gateway_gateway_pb.SubmitRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: gateway_gateway_pb.SubmitResponse) => void): grpcWeb.ClientReadableStream<gateway_gateway_pb.SubmitResponse>;

  submit(
    request: gateway_gateway_pb.SubmitRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: gateway_gateway_pb.SubmitResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/gateway.Gateway/Submit',
        request,
        metadata || {},
        this.methodDescriptorSubmit,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/gateway.Gateway/Submit',
    request,
    metadata || {},
    this.methodDescriptorSubmit);
  }

  methodDescriptorCommitStatus = new grpcWeb.MethodDescriptor(
    '/gateway.Gateway/CommitStatus',
    grpcWeb.MethodType.UNARY,
    gateway_gateway_pb.SignedCommitStatusRequest,
    gateway_gateway_pb.CommitStatusResponse,
    (request: gateway_gateway_pb.SignedCommitStatusRequest) => {
      return request.serializeBinary();
    },
    gateway_gateway_pb.CommitStatusResponse.deserializeBinary
  );

  commitStatus(
    request: gateway_gateway_pb.SignedCommitStatusRequest,
    metadata?: grpcWeb.Metadata | null): Promise<gateway_gateway_pb.CommitStatusResponse>;

  commitStatus(
    request: gateway_gateway_pb.SignedCommitStatusRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: gateway_gateway_pb.CommitStatusResponse) => void): grpcWeb.ClientReadableStream<gateway_gateway_pb.CommitStatusResponse>;

  commitStatus(
    request: gateway_gateway_pb.SignedCommitStatusRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: gateway_gateway_pb.CommitStatusResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/gateway.Gateway/CommitStatus',
        request,
        metadata || {},
        this.methodDescriptorCommitStatus,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/gateway.Gateway/CommitStatus',
    request,
    metadata || {},
    this.methodDescriptorCommitStatus);
  }

  methodDescriptorEvaluate = new grpcWeb.MethodDescriptor(
    '/gateway.Gateway/Evaluate',
    grpcWeb.MethodType.UNARY,
    gateway_gateway_pb.EvaluateRequest,
    gateway_gateway_pb.EvaluateResponse,
    (request: gateway_gateway_pb.EvaluateRequest) => {
      return request.serializeBinary();
    },
    gateway_gateway_pb.EvaluateResponse.deserializeBinary
  );

  evaluate(
    request: gateway_gateway_pb.EvaluateRequest,
    metadata?: grpcWeb.Metadata | null): Promise<gateway_gateway_pb.EvaluateResponse>;

  evaluate(
    request: gateway_gateway_pb.EvaluateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: gateway_gateway_pb.EvaluateResponse) => void): grpcWeb.ClientReadableStream<gateway_gateway_pb.EvaluateResponse>;

  evaluate(
    request: gateway_gateway_pb.EvaluateRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: gateway_gateway_pb.EvaluateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/gateway.Gateway/Evaluate',
        request,
        metadata || {},
        this.methodDescriptorEvaluate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/gateway.Gateway/Evaluate',
    request,
    metadata || {},
    this.methodDescriptorEvaluate);
  }

  methodDescriptorChaincodeEvents = new grpcWeb.MethodDescriptor(
    '/gateway.Gateway/ChaincodeEvents',
    grpcWeb.MethodType.SERVER_STREAMING,
    gateway_gateway_pb.SignedChaincodeEventsRequest,
    gateway_gateway_pb.ChaincodeEventsResponse,
    (request: gateway_gateway_pb.SignedChaincodeEventsRequest) => {
      return request.serializeBinary();
    },
    gateway_gateway_pb.ChaincodeEventsResponse.deserializeBinary
  );

  chaincodeEvents(
    request: gateway_gateway_pb.SignedChaincodeEventsRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<gateway_gateway_pb.ChaincodeEventsResponse> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/gateway.Gateway/ChaincodeEvents',
      request,
      metadata || {},
      this.methodDescriptorChaincodeEvents);
  }

}

