// Copyright the Hyperledger Fabric contributors. All rights reserved.
//
// SPDX-License-Identifier: Apache-2.0

// @generated by protoc-gen-es v2.5.1 with parameter "target=ts,keep_empty_files=true"
// @generated from file peer/snapshot.proto (package protos, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { SignatureHeader } from "../common/common_pb";
import { file_common_common } from "../common/common_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file peer/snapshot.proto.
 */
export const file_peer_snapshot: GenFile = /*@__PURE__*/
  fileDesc("ChNwZWVyL3NuYXBzaG90LnByb3RvEgZwcm90b3MibgoPU25hcHNob3RSZXF1ZXN0EjEKEHNpZ25hdHVyZV9oZWFkZXIYASABKAsyFy5jb21tb24uU2lnbmF0dXJlSGVhZGVyEhIKCmNoYW5uZWxfaWQYAiABKAkSFAoMYmxvY2tfbnVtYmVyGAMgASgEIlYKDVNuYXBzaG90UXVlcnkSMQoQc2lnbmF0dXJlX2hlYWRlchgBIAEoCzIXLmNvbW1vbi5TaWduYXR1cmVIZWFkZXISEgoKY2hhbm5lbF9pZBgCIAEoCSI7ChVTaWduZWRTbmFwc2hvdFJlcXVlc3QSDwoHcmVxdWVzdBgBIAEoDBIRCglzaWduYXR1cmUYAiABKAwiNgodUXVlcnlQZW5kaW5nU25hcHNob3RzUmVzcG9uc2USFQoNYmxvY2tfbnVtYmVycxgBIAMoBDLrAQoIU25hcHNob3QSQwoIR2VuZXJhdGUSHS5wcm90b3MuU2lnbmVkU25hcHNob3RSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASQQoGQ2FuY2VsEh0ucHJvdG9zLlNpZ25lZFNuYXBzaG90UmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAElcKDVF1ZXJ5UGVuZGluZ3MSHS5wcm90b3MuU2lnbmVkU25hcHNob3RSZXF1ZXN0GiUucHJvdG9zLlF1ZXJ5UGVuZGluZ1NuYXBzaG90c1Jlc3BvbnNlIgBCUgoib3JnLmh5cGVybGVkZ2VyLmZhYnJpYy5wcm90b3MucGVlclosZ2l0aHViLmNvbS9oeXBlcmxlZGdlci9mYWJyaWMtcHJvdG9zLWdvL3BlZXJiBnByb3RvMw", [file_google_protobuf_empty, file_common_common]);

/**
 * SnapshotRequest contains information for a generate/cancel snapshot request
 *
 * @generated from message protos.SnapshotRequest
 */
export type SnapshotRequest = Message<"protos.SnapshotRequest"> & {
  /**
   * The signature header that contains creator identity and nonce
   *
   * @generated from field: common.SignatureHeader signature_header = 1;
   */
  signatureHeader?: SignatureHeader;

  /**
   * The channel ID
   *
   * @generated from field: string channel_id = 2;
   */
  channelId: string;

  /**
   * The block number to generate a snapshot
   *
   * @generated from field: uint64 block_number = 3;
   */
  blockNumber: bigint;
};

/**
 * Describes the message protos.SnapshotRequest.
 * Use `create(SnapshotRequestSchema)` to create a new message.
 */
export const SnapshotRequestSchema: GenMessage<SnapshotRequest> = /*@__PURE__*/
  messageDesc(file_peer_snapshot, 0);

/**
 * SnapshotQuery contains information for a query snapshot request
 *
 * @generated from message protos.SnapshotQuery
 */
export type SnapshotQuery = Message<"protos.SnapshotQuery"> & {
  /**
   * The signature header that contains creator identity and nonce
   *
   * @generated from field: common.SignatureHeader signature_header = 1;
   */
  signatureHeader?: SignatureHeader;

  /**
   * The channel ID
   *
   * @generated from field: string channel_id = 2;
   */
  channelId: string;
};

/**
 * Describes the message protos.SnapshotQuery.
 * Use `create(SnapshotQuerySchema)` to create a new message.
 */
export const SnapshotQuerySchema: GenMessage<SnapshotQuery> = /*@__PURE__*/
  messageDesc(file_peer_snapshot, 1);

/**
 * SignedSnapshotRequest contains marshalled request bytes and signature
 *
 * @generated from message protos.SignedSnapshotRequest
 */
export type SignedSnapshotRequest = Message<"protos.SignedSnapshotRequest"> & {
  /**
   * The bytes of SnapshotRequest or SnapshotQuery
   *
   * @generated from field: bytes request = 1;
   */
  request: Uint8Array;

  /**
   * Signaure over request bytes; this signature is to be verified against the client identity
   *
   * @generated from field: bytes signature = 2;
   */
  signature: Uint8Array;
};

/**
 * Describes the message protos.SignedSnapshotRequest.
 * Use `create(SignedSnapshotRequestSchema)` to create a new message.
 */
export const SignedSnapshotRequestSchema: GenMessage<SignedSnapshotRequest> = /*@__PURE__*/
  messageDesc(file_peer_snapshot, 2);

/**
 * QueryPendingSnapshotsResponse specifies the response payload of a query pending snapshots request
 *
 * @generated from message protos.QueryPendingSnapshotsResponse
 */
export type QueryPendingSnapshotsResponse = Message<"protos.QueryPendingSnapshotsResponse"> & {
  /**
   * @generated from field: repeated uint64 block_numbers = 1;
   */
  blockNumbers: bigint[];
};

/**
 * Describes the message protos.QueryPendingSnapshotsResponse.
 * Use `create(QueryPendingSnapshotsResponseSchema)` to create a new message.
 */
export const QueryPendingSnapshotsResponseSchema: GenMessage<QueryPendingSnapshotsResponse> = /*@__PURE__*/
  messageDesc(file_peer_snapshot, 3);

/**
 * @generated from service protos.Snapshot
 */
export const Snapshot: GenService<{
  /**
   * Generate a snapshot reqeust. SignedSnapshotRequest contains marshalled bytes for SnaphostRequest
   *
   * @generated from rpc protos.Snapshot.Generate
   */
  generate: {
    methodKind: "unary";
    input: typeof SignedSnapshotRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Cancel a snapshot reqeust. SignedSnapshotRequest contains marshalled bytes for SnaphostRequest
   *
   * @generated from rpc protos.Snapshot.Cancel
   */
  cancel: {
    methodKind: "unary";
    input: typeof SignedSnapshotRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Query pending snapshots query. SignedSnapshotRequest contains marshalled bytes for SnaphostQuery
   *
   * @generated from rpc protos.Snapshot.QueryPendings
   */
  queryPendings: {
    methodKind: "unary";
    input: typeof SignedSnapshotRequestSchema;
    output: typeof QueryPendingSnapshotsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_peer_snapshot, 0);

