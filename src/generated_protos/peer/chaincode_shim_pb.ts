// Copyright the Hyperledger Fabric contributors. All rights reserved.
//
// SPDX-License-Identifier: Apache-2.0

// @generated by protoc-gen-es v2.5.1 with parameter "target=ts,keep_empty_files=true"
// @generated from file peer/chaincode_shim.proto (package protos, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { ChaincodeEvent } from "./chaincode_event_pb";
import { file_peer_chaincode_event } from "./chaincode_event_pb";
import type { SignedProposal } from "./proposal_pb";
import { file_peer_proposal } from "./proposal_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file peer/chaincode_shim.proto.
 */
export const file_peer_chaincode_shim: GenFile = /*@__PURE__*/
  fileDesc("ChlwZWVyL2NoYWluY29kZV9zaGltLnByb3RvEgZwcm90b3Mi2AUKEENoYWluY29kZU1lc3NhZ2USKwoEdHlwZRgBIAEoDjIdLnByb3Rvcy5DaGFpbmNvZGVNZXNzYWdlLlR5cGUSLQoJdGltZXN0YW1wGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIPCgdwYXlsb2FkGAMgASgMEgwKBHR4aWQYBCABKAkSKAoIcHJvcG9zYWwYBSABKAsyFi5wcm90b3MuU2lnbmVkUHJvcG9zYWwSLwoPY2hhaW5jb2RlX2V2ZW50GAYgASgLMhYucHJvdG9zLkNoYWluY29kZUV2ZW50EhIKCmNoYW5uZWxfaWQYByABKAki2QMKBFR5cGUSDQoJVU5ERUZJTkVEEAASDAoIUkVHSVNURVIQARIOCgpSRUdJU1RFUkVEEAISCAoESU5JVBADEgkKBVJFQURZEAQSDwoLVFJBTlNBQ1RJT04QBRINCglDT01QTEVURUQQBhIJCgVFUlJPUhAHEg0KCUdFVF9TVEFURRAIEg0KCVBVVF9TVEFURRAJEg0KCURFTF9TVEFURRAKEhQKEElOVk9LRV9DSEFJTkNPREUQCxIMCghSRVNQT05TRRANEhYKEkdFVF9TVEFURV9CWV9SQU5HRRAOEhQKEEdFVF9RVUVSWV9SRVNVTFQQDxIUChBRVUVSWV9TVEFURV9ORVhUEBASFQoRUVVFUllfU1RBVEVfQ0xPU0UQERINCglLRUVQQUxJVkUQEhIXChNHRVRfSElTVE9SWV9GT1JfS0VZEBMSFgoSR0VUX1NUQVRFX01FVEFEQVRBEBQSFgoSUFVUX1NUQVRFX01FVEFEQVRBEBUSGQoVR0VUX1BSSVZBVEVfREFUQV9IQVNIEBYSFgoSUFVSR0VfUFJJVkFURV9EQVRBEBcSFQoRV1JJVEVfQkFUQ0hfU1RBVEUQGBIWChJHRVRfU1RBVEVfTVVMVElQTEUQGSIrCghHZXRTdGF0ZRILCgNrZXkYASABKAkSEgoKY29sbGVjdGlvbhgCIAEoCSIzChBHZXRTdGF0ZU1ldGFkYXRhEgsKA2tleRgBIAEoCRISCgpjb2xsZWN0aW9uGAIgASgJIjQKEEdldFN0YXRlTXVsdGlwbGUSDAoEa2V5cxgBIAMoCRISCgpjb2xsZWN0aW9uGAIgASgJIigKFkdldFN0YXRlTXVsdGlwbGVSZXN1bHQSDgoGdmFsdWVzGAEgAygMIjoKCFB1dFN0YXRlEgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoDBISCgpjb2xsZWN0aW9uGAMgASgJIlwKEFB1dFN0YXRlTWV0YWRhdGESCwoDa2V5GAEgASgJEhIKCmNvbGxlY3Rpb24YAyABKAkSJwoIbWV0YWRhdGEYBCABKAsyFS5wcm90b3MuU3RhdGVNZXRhZGF0YSIzCg9Xcml0ZUJhdGNoU3RhdGUSIAoDcmVjGAEgAygLMhMucHJvdG9zLldyaXRlUmVjb3JkIvMBCgtXcml0ZVJlY29yZBILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAwSEgoKY29sbGVjdGlvbhgDIAEoCRInCghtZXRhZGF0YRgEIAEoCzIVLnByb3Rvcy5TdGF0ZU1ldGFkYXRhEiYKBHR5cGUYBSABKA4yGC5wcm90b3MuV3JpdGVSZWNvcmQuVHlwZSJjCgRUeXBlEg0KCVVOREVGSU5FRBAAEg0KCVBVVF9TVEFURRAJEg0KCURFTF9TVEFURRAKEhYKElBVVF9TVEFURV9NRVRBREFUQRAVEhYKElBVUkdFX1BSSVZBVEVfREFUQRAXIisKCERlbFN0YXRlEgsKA2tleRgBIAEoCRISCgpjb2xsZWN0aW9uGAIgASgJIjQKEVB1cmdlUHJpdmF0ZVN0YXRlEgsKA2tleRgBIAEoCRISCgpjb2xsZWN0aW9uGAIgASgJIlkKD0dldFN0YXRlQnlSYW5nZRIQCghzdGFydEtleRgBIAEoCRIOCgZlbmRLZXkYAiABKAkSEgoKY29sbGVjdGlvbhgDIAEoCRIQCghtZXRhZGF0YRgEIAEoDCJFCg5HZXRRdWVyeVJlc3VsdBINCgVxdWVyeRgBIAEoCRISCgpjb2xsZWN0aW9uGAIgASgJEhAKCG1ldGFkYXRhGAMgASgMIjMKDVF1ZXJ5TWV0YWRhdGESEAoIcGFnZVNpemUYASABKAUSEAoIYm9va21hcmsYAiABKAkiHwoQR2V0SGlzdG9yeUZvcktleRILCgNrZXkYASABKAkiHAoOUXVlcnlTdGF0ZU5leHQSCgoCaWQYASABKAkiHQoPUXVlcnlTdGF0ZUNsb3NlEgoKAmlkGAEgASgJIicKEFF1ZXJ5UmVzdWx0Qnl0ZXMSEwoLcmVzdWx0Qnl0ZXMYASABKAwiagoNUXVlcnlSZXNwb25zZRIpCgdyZXN1bHRzGAEgAygLMhgucHJvdG9zLlF1ZXJ5UmVzdWx0Qnl0ZXMSEAoIaGFzX21vcmUYAiABKAgSCgoCaWQYAyABKAkSEAoIbWV0YWRhdGEYBCABKAwiSAoVUXVlcnlSZXNwb25zZU1ldGFkYXRhEh0KFWZldGNoZWRfcmVjb3Jkc19jb3VudBgBIAEoBRIQCghib29rbWFyaxgCIAEoCSIvCg1TdGF0ZU1ldGFkYXRhEg8KB21ldGFrZXkYASABKAkSDQoFdmFsdWUYAiABKAwiPQoTU3RhdGVNZXRhZGF0YVJlc3VsdBImCgdlbnRyaWVzGAEgAygLMhUucHJvdG9zLlN0YXRlTWV0YWRhdGEyVgoQQ2hhaW5jb2RlU3VwcG9ydBJCCghSZWdpc3RlchIYLnByb3Rvcy5DaGFpbmNvZGVNZXNzYWdlGhgucHJvdG9zLkNoYWluY29kZU1lc3NhZ2UoATABMk4KCUNoYWluY29kZRJBCgdDb25uZWN0EhgucHJvdG9zLkNoYWluY29kZU1lc3NhZ2UaGC5wcm90b3MuQ2hhaW5jb2RlTWVzc2FnZSgBMAFCUgoib3JnLmh5cGVybGVkZ2VyLmZhYnJpYy5wcm90b3MucGVlclosZ2l0aHViLmNvbS9oeXBlcmxlZGdlci9mYWJyaWMtcHJvdG9zLWdvL3BlZXJiBnByb3RvMw", [file_peer_chaincode_event, file_peer_proposal, file_google_protobuf_timestamp]);

/**
 * @generated from message protos.ChaincodeMessage
 */
export type ChaincodeMessage = Message<"protos.ChaincodeMessage"> & {
  /**
   * @generated from field: protos.ChaincodeMessage.Type type = 1;
   */
  type: ChaincodeMessage_Type;

  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 2;
   */
  timestamp?: Timestamp;

  /**
   * @generated from field: bytes payload = 3;
   */
  payload: Uint8Array;

  /**
   * @generated from field: string txid = 4;
   */
  txid: string;

  /**
   * @generated from field: protos.SignedProposal proposal = 5;
   */
  proposal?: SignedProposal;

  /**
   * event emitted by chaincode. Used only with Init or Invoke.
   * This event is then stored (currently)
   * with Block.NonHashData.TransactionResult
   *
   * @generated from field: protos.ChaincodeEvent chaincode_event = 6;
   */
  chaincodeEvent?: ChaincodeEvent;

  /**
   * channel id
   *
   * @generated from field: string channel_id = 7;
   */
  channelId: string;
};

/**
 * Describes the message protos.ChaincodeMessage.
 * Use `create(ChaincodeMessageSchema)` to create a new message.
 */
export const ChaincodeMessageSchema: GenMessage<ChaincodeMessage> = /*@__PURE__*/
  messageDesc(file_peer_chaincode_shim, 0);

/**
 * @generated from enum protos.ChaincodeMessage.Type
 */
export enum ChaincodeMessage_Type {
  /**
   * @generated from enum value: UNDEFINED = 0;
   */
  UNDEFINED = 0,

  /**
   * @generated from enum value: REGISTER = 1;
   */
  REGISTER = 1,

  /**
   * @generated from enum value: REGISTERED = 2;
   */
  REGISTERED = 2,

  /**
   * @generated from enum value: INIT = 3;
   */
  INIT = 3,

  /**
   * @generated from enum value: READY = 4;
   */
  READY = 4,

  /**
   * @generated from enum value: TRANSACTION = 5;
   */
  TRANSACTION = 5,

  /**
   * @generated from enum value: COMPLETED = 6;
   */
  COMPLETED = 6,

  /**
   * @generated from enum value: ERROR = 7;
   */
  ERROR = 7,

  /**
   * @generated from enum value: GET_STATE = 8;
   */
  GET_STATE = 8,

  /**
   * @generated from enum value: PUT_STATE = 9;
   */
  PUT_STATE = 9,

  /**
   * @generated from enum value: DEL_STATE = 10;
   */
  DEL_STATE = 10,

  /**
   * @generated from enum value: INVOKE_CHAINCODE = 11;
   */
  INVOKE_CHAINCODE = 11,

  /**
   * @generated from enum value: RESPONSE = 13;
   */
  RESPONSE = 13,

  /**
   * @generated from enum value: GET_STATE_BY_RANGE = 14;
   */
  GET_STATE_BY_RANGE = 14,

  /**
   * @generated from enum value: GET_QUERY_RESULT = 15;
   */
  GET_QUERY_RESULT = 15,

  /**
   * @generated from enum value: QUERY_STATE_NEXT = 16;
   */
  QUERY_STATE_NEXT = 16,

  /**
   * @generated from enum value: QUERY_STATE_CLOSE = 17;
   */
  QUERY_STATE_CLOSE = 17,

  /**
   * @generated from enum value: KEEPALIVE = 18;
   */
  KEEPALIVE = 18,

  /**
   * @generated from enum value: GET_HISTORY_FOR_KEY = 19;
   */
  GET_HISTORY_FOR_KEY = 19,

  /**
   * @generated from enum value: GET_STATE_METADATA = 20;
   */
  GET_STATE_METADATA = 20,

  /**
   * @generated from enum value: PUT_STATE_METADATA = 21;
   */
  PUT_STATE_METADATA = 21,

  /**
   * @generated from enum value: GET_PRIVATE_DATA_HASH = 22;
   */
  GET_PRIVATE_DATA_HASH = 22,

  /**
   * @generated from enum value: PURGE_PRIVATE_DATA = 23;
   */
  PURGE_PRIVATE_DATA = 23,

  /**
   * @generated from enum value: WRITE_BATCH_STATE = 24;
   */
  WRITE_BATCH_STATE = 24,

  /**
   * @generated from enum value: GET_STATE_MULTIPLE = 25;
   */
  GET_STATE_MULTIPLE = 25,
}

/**
 * Describes the enum protos.ChaincodeMessage.Type.
 */
export const ChaincodeMessage_TypeSchema: GenEnum<ChaincodeMessage_Type> = /*@__PURE__*/
  enumDesc(file_peer_chaincode_shim, 0, 0);

/**
 * GetState is the payload of a ChaincodeMessage. It contains a key which
 * is to be fetched from the ledger. If the collection is specified, the key
 * would be fetched from the collection (i.e., private state)
 *
 * @generated from message protos.GetState
 */
export type GetState = Message<"protos.GetState"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: string collection = 2;
   */
  collection: string;
};

/**
 * Describes the message protos.GetState.
 * Use `create(GetStateSchema)` to create a new message.
 */
export const GetStateSchema: GenMessage<GetState> = /*@__PURE__*/
  messageDesc(file_peer_chaincode_shim, 1);

/**
 * @generated from message protos.GetStateMetadata
 */
export type GetStateMetadata = Message<"protos.GetStateMetadata"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: string collection = 2;
   */
  collection: string;
};

/**
 * Describes the message protos.GetStateMetadata.
 * Use `create(GetStateMetadataSchema)` to create a new message.
 */
export const GetStateMetadataSchema: GenMessage<GetStateMetadata> = /*@__PURE__*/
  messageDesc(file_peer_chaincode_shim, 2);

/**
 * GetStateMultiple is the payload of the ChaincodeMessage.
 * It contains the keys to be retrieved from the ledger.
 * If a collection is specified, the keys will be retrieved
 * from the collection (i.e., the private state).
 *
 * @generated from message protos.GetStateMultiple
 */
export type GetStateMultiple = Message<"protos.GetStateMultiple"> & {
  /**
   * @generated from field: repeated string keys = 1;
   */
  keys: string[];

  /**
   * @generated from field: string collection = 2;
   */
  collection: string;
};

/**
 * Describes the message protos.GetStateMultiple.
 * Use `create(GetStateMultipleSchema)` to create a new message.
 */
export const GetStateMultipleSchema: GenMessage<GetStateMultiple> = /*@__PURE__*/
  messageDesc(file_peer_chaincode_shim, 3);

/**
 * GetStateMultipleResult is result of executing the GetStateMiltiple request
 *
 * @generated from message protos.GetStateMultipleResult
 */
export type GetStateMultipleResult = Message<"protos.GetStateMultipleResult"> & {
  /**
   * @generated from field: repeated bytes values = 1;
   */
  values: Uint8Array[];
};

/**
 * Describes the message protos.GetStateMultipleResult.
 * Use `create(GetStateMultipleResultSchema)` to create a new message.
 */
export const GetStateMultipleResultSchema: GenMessage<GetStateMultipleResult> = /*@__PURE__*/
  messageDesc(file_peer_chaincode_shim, 4);

/**
 * PutState is the payload of a ChaincodeMessage. It contains a key and value
 * which needs to be written to the transaction's write set. If the collection is
 * specified, the key and value would be written to the transaction's private
 * write set.
 *
 * @generated from message protos.PutState
 */
export type PutState = Message<"protos.PutState"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: bytes value = 2;
   */
  value: Uint8Array;

  /**
   * @generated from field: string collection = 3;
   */
  collection: string;
};

/**
 * Describes the message protos.PutState.
 * Use `create(PutStateSchema)` to create a new message.
 */
export const PutStateSchema: GenMessage<PutState> = /*@__PURE__*/
  messageDesc(file_peer_chaincode_shim, 5);

/**
 * @generated from message protos.PutStateMetadata
 */
export type PutStateMetadata = Message<"protos.PutStateMetadata"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: string collection = 3;
   */
  collection: string;

  /**
   * @generated from field: protos.StateMetadata metadata = 4;
   */
  metadata?: StateMetadata;
};

/**
 * Describes the message protos.PutStateMetadata.
 * Use `create(PutStateMetadataSchema)` to create a new message.
 */
export const PutStateMetadataSchema: GenMessage<PutStateMetadata> = /*@__PURE__*/
  messageDesc(file_peer_chaincode_shim, 6);

/**
 * WriteBatchState - set of records for state changes sent by the batch
 *
 * @generated from message protos.WriteBatchState
 */
export type WriteBatchState = Message<"protos.WriteBatchState"> & {
  /**
   * @generated from field: repeated protos.WriteRecord rec = 1;
   */
  rec: WriteRecord[];
};

/**
 * Describes the message protos.WriteBatchState.
 * Use `create(WriteBatchStateSchema)` to create a new message.
 */
export const WriteBatchStateSchema: GenMessage<WriteBatchState> = /*@__PURE__*/
  messageDesc(file_peer_chaincode_shim, 7);

/**
 * WriteRecord - single record with changes in the state of different types.
 * Filled in depending on the type.
 *
 * @generated from message protos.WriteRecord
 */
export type WriteRecord = Message<"protos.WriteRecord"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: bytes value = 2;
   */
  value: Uint8Array;

  /**
   * @generated from field: string collection = 3;
   */
  collection: string;

  /**
   * @generated from field: protos.StateMetadata metadata = 4;
   */
  metadata?: StateMetadata;

  /**
   * @generated from field: protos.WriteRecord.Type type = 5;
   */
  type: WriteRecord_Type;
};

/**
 * Describes the message protos.WriteRecord.
 * Use `create(WriteRecordSchema)` to create a new message.
 */
export const WriteRecordSchema: GenMessage<WriteRecord> = /*@__PURE__*/
  messageDesc(file_peer_chaincode_shim, 8);

/**
 * @generated from enum protos.WriteRecord.Type
 */
export enum WriteRecord_Type {
  /**
   * @generated from enum value: UNDEFINED = 0;
   */
  UNDEFINED = 0,

  /**
   * @generated from enum value: PUT_STATE = 9;
   */
  PUT_STATE = 9,

  /**
   * @generated from enum value: DEL_STATE = 10;
   */
  DEL_STATE = 10,

  /**
   * @generated from enum value: PUT_STATE_METADATA = 21;
   */
  PUT_STATE_METADATA = 21,

  /**
   * @generated from enum value: PURGE_PRIVATE_DATA = 23;
   */
  PURGE_PRIVATE_DATA = 23,
}

/**
 * Describes the enum protos.WriteRecord.Type.
 */
export const WriteRecord_TypeSchema: GenEnum<WriteRecord_Type> = /*@__PURE__*/
  enumDesc(file_peer_chaincode_shim, 8, 0);

/**
 * DelState is the payload of a ChaincodeMessage. It contains a key which
 * needs to be recorded in the transaction's write set as a delete operation.
 * If the collection is specified, the key needs to be recorded in the
 * transaction's private write set as a delete operation.
 *
 * @generated from message protos.DelState
 */
export type DelState = Message<"protos.DelState"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: string collection = 2;
   */
  collection: string;
};

/**
 * Describes the message protos.DelState.
 * Use `create(DelStateSchema)` to create a new message.
 */
export const DelStateSchema: GenMessage<DelState> = /*@__PURE__*/
  messageDesc(file_peer_chaincode_shim, 9);

/**
 * @generated from message protos.PurgePrivateState
 */
export type PurgePrivateState = Message<"protos.PurgePrivateState"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: string collection = 2;
   */
  collection: string;
};

/**
 * Describes the message protos.PurgePrivateState.
 * Use `create(PurgePrivateStateSchema)` to create a new message.
 */
export const PurgePrivateStateSchema: GenMessage<PurgePrivateState> = /*@__PURE__*/
  messageDesc(file_peer_chaincode_shim, 10);

/**
 * GetStateByRange is the payload of a ChaincodeMessage. It contains a start key and
 * a end key required to execute range query. If the collection is specified,
 * the range query needs to be executed on the private data. The metadata hold
 * the byte representation of QueryMetadata.
 *
 * @generated from message protos.GetStateByRange
 */
export type GetStateByRange = Message<"protos.GetStateByRange"> & {
  /**
   * @generated from field: string startKey = 1;
   */
  startKey: string;

  /**
   * @generated from field: string endKey = 2;
   */
  endKey: string;

  /**
   * @generated from field: string collection = 3;
   */
  collection: string;

  /**
   * @generated from field: bytes metadata = 4;
   */
  metadata: Uint8Array;
};

/**
 * Describes the message protos.GetStateByRange.
 * Use `create(GetStateByRangeSchema)` to create a new message.
 */
export const GetStateByRangeSchema: GenMessage<GetStateByRange> = /*@__PURE__*/
  messageDesc(file_peer_chaincode_shim, 11);

/**
 * GetQueryResult is the payload of a ChaincodeMessage. It contains a query
 * string in the form that is supported by the underlying state database.
 * If the collection is specified, the query needs to be executed on the
 * private data.  The metadata hold the byte representation of QueryMetadata.
 *
 * @generated from message protos.GetQueryResult
 */
export type GetQueryResult = Message<"protos.GetQueryResult"> & {
  /**
   * @generated from field: string query = 1;
   */
  query: string;

  /**
   * @generated from field: string collection = 2;
   */
  collection: string;

  /**
   * @generated from field: bytes metadata = 3;
   */
  metadata: Uint8Array;
};

/**
 * Describes the message protos.GetQueryResult.
 * Use `create(GetQueryResultSchema)` to create a new message.
 */
export const GetQueryResultSchema: GenMessage<GetQueryResult> = /*@__PURE__*/
  messageDesc(file_peer_chaincode_shim, 12);

/**
 * QueryMetadata is the metadata of a GetStateByRange and GetQueryResult.
 * It contains a pageSize which denotes the number of records to be fetched
 * and a bookmark.
 *
 * @generated from message protos.QueryMetadata
 */
export type QueryMetadata = Message<"protos.QueryMetadata"> & {
  /**
   * @generated from field: int32 pageSize = 1;
   */
  pageSize: number;

  /**
   * @generated from field: string bookmark = 2;
   */
  bookmark: string;
};

/**
 * Describes the message protos.QueryMetadata.
 * Use `create(QueryMetadataSchema)` to create a new message.
 */
export const QueryMetadataSchema: GenMessage<QueryMetadata> = /*@__PURE__*/
  messageDesc(file_peer_chaincode_shim, 13);

/**
 * GetHistoryForKey is the payload of a ChaincodeMessage. It contains a key
 * for which the historical values need to be retrieved.
 *
 * @generated from message protos.GetHistoryForKey
 */
export type GetHistoryForKey = Message<"protos.GetHistoryForKey"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;
};

/**
 * Describes the message protos.GetHistoryForKey.
 * Use `create(GetHistoryForKeySchema)` to create a new message.
 */
export const GetHistoryForKeySchema: GenMessage<GetHistoryForKey> = /*@__PURE__*/
  messageDesc(file_peer_chaincode_shim, 14);

/**
 * @generated from message protos.QueryStateNext
 */
export type QueryStateNext = Message<"protos.QueryStateNext"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message protos.QueryStateNext.
 * Use `create(QueryStateNextSchema)` to create a new message.
 */
export const QueryStateNextSchema: GenMessage<QueryStateNext> = /*@__PURE__*/
  messageDesc(file_peer_chaincode_shim, 15);

/**
 * @generated from message protos.QueryStateClose
 */
export type QueryStateClose = Message<"protos.QueryStateClose"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message protos.QueryStateClose.
 * Use `create(QueryStateCloseSchema)` to create a new message.
 */
export const QueryStateCloseSchema: GenMessage<QueryStateClose> = /*@__PURE__*/
  messageDesc(file_peer_chaincode_shim, 16);

/**
 * QueryResultBytes hold the byte representation of a record returned by the peer.
 *
 * @generated from message protos.QueryResultBytes
 */
export type QueryResultBytes = Message<"protos.QueryResultBytes"> & {
  /**
   * @generated from field: bytes resultBytes = 1;
   */
  resultBytes: Uint8Array;
};

/**
 * Describes the message protos.QueryResultBytes.
 * Use `create(QueryResultBytesSchema)` to create a new message.
 */
export const QueryResultBytesSchema: GenMessage<QueryResultBytes> = /*@__PURE__*/
  messageDesc(file_peer_chaincode_shim, 17);

/**
 * QueryResponse is returned by the peer as a result of a GetStateByRange,
 * GetQueryResult, and GetHistoryForKey. It holds a bunch of records in
 * results field, a flag to denote whether more results need to be fetched from
 * the peer in has_more field, transaction id in id field, and a QueryResponseMetadata
 * in metadata field.
 *
 * @generated from message protos.QueryResponse
 */
export type QueryResponse = Message<"protos.QueryResponse"> & {
  /**
   * @generated from field: repeated protos.QueryResultBytes results = 1;
   */
  results: QueryResultBytes[];

  /**
   * @generated from field: bool has_more = 2;
   */
  hasMore: boolean;

  /**
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * @generated from field: bytes metadata = 4;
   */
  metadata: Uint8Array;
};

/**
 * Describes the message protos.QueryResponse.
 * Use `create(QueryResponseSchema)` to create a new message.
 */
export const QueryResponseSchema: GenMessage<QueryResponse> = /*@__PURE__*/
  messageDesc(file_peer_chaincode_shim, 18);

/**
 * QueryResponseMetadata is the metadata of a QueryResponse. It contains a count
 * which denotes the number of records fetched from the ledger and a bookmark.
 *
 * @generated from message protos.QueryResponseMetadata
 */
export type QueryResponseMetadata = Message<"protos.QueryResponseMetadata"> & {
  /**
   * @generated from field: int32 fetched_records_count = 1;
   */
  fetchedRecordsCount: number;

  /**
   * @generated from field: string bookmark = 2;
   */
  bookmark: string;
};

/**
 * Describes the message protos.QueryResponseMetadata.
 * Use `create(QueryResponseMetadataSchema)` to create a new message.
 */
export const QueryResponseMetadataSchema: GenMessage<QueryResponseMetadata> = /*@__PURE__*/
  messageDesc(file_peer_chaincode_shim, 19);

/**
 * @generated from message protos.StateMetadata
 */
export type StateMetadata = Message<"protos.StateMetadata"> & {
  /**
   * @generated from field: string metakey = 1;
   */
  metakey: string;

  /**
   * @generated from field: bytes value = 2;
   */
  value: Uint8Array;
};

/**
 * Describes the message protos.StateMetadata.
 * Use `create(StateMetadataSchema)` to create a new message.
 */
export const StateMetadataSchema: GenMessage<StateMetadata> = /*@__PURE__*/
  messageDesc(file_peer_chaincode_shim, 20);

/**
 * @generated from message protos.StateMetadataResult
 */
export type StateMetadataResult = Message<"protos.StateMetadataResult"> & {
  /**
   * @generated from field: repeated protos.StateMetadata entries = 1;
   */
  entries: StateMetadata[];
};

/**
 * Describes the message protos.StateMetadataResult.
 * Use `create(StateMetadataResultSchema)` to create a new message.
 */
export const StateMetadataResultSchema: GenMessage<StateMetadataResult> = /*@__PURE__*/
  messageDesc(file_peer_chaincode_shim, 21);

/**
 * Interface that provides support to chaincode execution. ChaincodeContext
 * provides the context necessary for the server to respond appropriately.
 *
 * @generated from service protos.ChaincodeSupport
 */
export const ChaincodeSupport: GenService<{
  /**
   * @generated from rpc protos.ChaincodeSupport.Register
   */
  register: {
    methodKind: "bidi_streaming";
    input: typeof ChaincodeMessageSchema;
    output: typeof ChaincodeMessageSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_peer_chaincode_shim, 0);

/**
 * Chaincode as a server - peer establishes a connection to the chaincode as a client
 * Currently only supports a stream connection.
 *
 * @generated from service protos.Chaincode
 */
export const Chaincode: GenService<{
  /**
   * @generated from rpc protos.Chaincode.Connect
   */
  connect: {
    methodKind: "bidi_streaming";
    input: typeof ChaincodeMessageSchema;
    output: typeof ChaincodeMessageSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_peer_chaincode_shim, 1);

